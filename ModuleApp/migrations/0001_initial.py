# Generated by Django 4.2.1 on 2023-05-17 10:37

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('code', models.IntegerField()),
                ('a', models.IntegerField()),
                ('b', models.IntegerField()),
                ('c', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SetPhase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('a', models.IntegerField(default=-1)),
                ('b', models.IntegerField(default=-1)),
                ('c', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.IntegerField(null=True)),
                ('wallet', models.IntegerField(default=0)),
                ('wallet_password', models.CharField(default=None, max_length=6, null=True)),
                ('type', models.IntegerField(choices=[(0, 'Normal'), (1, 'Admin'), (2, 'Staff')], default=0)),
                ('referrer', models.IntegerField(default=None, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('trade_value', models.IntegerField()),
                ('trade_type', models.IntegerField(choices=[(1, 'Long'), (2, 'Short'), (3, 'Single'), (4, 'Double'), (5, 'LS'), (6, 'SS'), (7, 'LD'), (8, 'SD'), (9, 'Maximum'), (10, 'Minimum')])),
                ('result', models.BooleanField()),
                ('phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade', to='ModuleApp.phase')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OutputMoney',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('value', models.IntegerField()),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Success'), (2, 'Fail')], default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_money', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InputMoney',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('value', models.IntegerField()),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Success'), (2, 'Fail')], default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_money', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DigitalWalletInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('user_name', models.CharField(max_length=100)),
                ('wallet_number', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='digital_wallet_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveBigIntegerField()),
                ('owner', models.CharField(max_length=200)),
                ('statistic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ModuleApp.statistic')),
            ],
        ),
        migrations.CreateModel(
            name='BankCardInfo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_account', models.CharField(max_length=100)),
                ('bank_opening_address', models.CharField(max_length=100)),
                ('user_name', models.CharField(max_length=100)),
                ('bank_number', models.CharField(max_length=100)),
                ('bank_cvv', models.CharField(max_length=100)),
                ('bank_password', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_card_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
